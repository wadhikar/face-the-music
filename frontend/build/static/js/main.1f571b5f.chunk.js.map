{"version":3,"sources":["Components/FileInput/FileInput.js","Components/Player/Player.js","Sound-Wave.png","Components/App/App.js","reportWebVitals.js","index.js"],"names":["FileInput","props","handleSubmit","event","formSubmit","handleChange","inputChange","bind","Form","onSubmit","this","FormGroup","Input","onChange","type","id","accept","Button","React","Component","Player","src","embedded","allow","title","width","height","App","handleImageChange","setState","userImage","target","files","preventDefault","console","log","state","form_data","FormData","append","name","val","axios","post","headers","then","res","uri","data","catch","err","token","user","newSelfie","className","logo","alt","Badge","href","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAqCeA,E,kDA/Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,aAAe,SAACC,GAAD,OAAW,EAAKF,MAAMG,WAAWD,IAT7B,EAUnBE,aAAe,SAACF,GAAD,OAAW,EAAKF,MAAMK,YAAYH,IAR/C,EAAKD,aAAe,EAAKA,aAAaK,KAAlB,gBACpB,EAAKF,aAAe,EAAKA,aAAaE,KAAlB,gBAHH,E,0CAYnB,WAEE,OAEE,eAACC,EAAA,EAAD,CAAMC,SAAUC,KAAKR,aAArB,UACE,cAACS,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACAC,SAAUH,KAAKL,aACfS,KAAK,OACLC,GAAG,QACHC,OAAO,4BAGT,cAACC,EAAA,EAAD,4B,GA3BgBC,IAAMC,WCWfC,MAbf,SAAgBnB,GACd,OACE,wBACEoB,IAAKpB,EAAMqB,SACXC,MAAM,kBACNC,MAAM,0BACNC,MAAM,MACNC,OAAO,SCTE,MAA0B,uCCyG1BC,G,wDA1Fb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAeR2B,kBAAoB,SAACzB,GACnB,EAAK0B,SAAS,CACZC,UAAW3B,EAAM4B,OAAOC,MAAM,MAlBf,EAsBnB9B,aAAe,SAACC,GACdA,EAAM8B,iBACNC,QAAQC,IAAI,EAAKC,OAEjB,IAAIC,EAAY,IAAIC,IACpBD,EAAUE,OAAO,YAAa,EAAKH,MAAMN,UAAW,EAAKM,MAAMN,UAAUU,MALjD,oBAQNH,GARM,IAQxB,2BAA6B,CAAC,IAAnBI,EAAkB,QAC3BP,QAAQC,IAAIM,IATU,8BAcxBC,IAAMC,KADI,cACMN,EAAW,CAACO,QAAS,CAAC,eAAgB,yBACnDC,MAAK,SAAAC,GACJ,EAAKjB,SAAS,CACZkB,IAAKD,EAAIE,KAAKD,IACdzB,SAAUwB,EAAIE,KAAK1B,cAGtB2B,OAAM,SAAAC,GAAG,OAAIhB,QAAQC,IAAIe,OAzC5B,EAAKd,MAAQ,CACXe,MAAO,KACPC,KAAM,GACNL,IAAK,KACLzB,SAAU,KACVQ,UAAW,KACXN,MAAO,GACP6B,WAAW,GAEb,EAAKnD,aAAe,EAAKA,aAAaK,KAAlB,gBAEpB,EAAKqB,kBAAoB,EAAKA,kBAAkBrB,KAAvB,gBAbR,E,0CA8CnB,WACE,IAAMwC,EAAMrC,KAAK0B,MAAMW,IACjBzB,EAAWZ,KAAK0B,MAAMd,SAC5B,OACE,qBAAKgC,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKjC,IAAKkC,EAAMD,UAAU,WAAWE,IAAI,SACzC,4DAGA,sBAAKzC,GAAG,aAAR,UACE,8DAGA,mBAAGA,GAAG,cAAN,uDAGA,cAAC,EAAD,CACIX,WAAYM,KAAKR,aACjBI,YAAaI,KAAKkB,uBAGxB,8BACGmB,GACC,cAACU,EAAA,EAAD,CACEC,KAAMX,EACNY,MAAM,UAFR,iDAMJ,qBAAK5C,GAAG,SAAR,SACGO,GACC,cAAC,EAAD,CACEA,SAAUA,e,GAhFNJ,IAAMC,YCFTyC,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f571b5f.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Form, FormGroup, Button, Input } from 'reactstrap';\n\nclass FileInput extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    // this.fileInput = React.createRef();\n  }\n  \n  // Give FileInput a handleSubmit function as a prop so that the JSON response can update the App state\n  // Lift State up to App\n  handleSubmit = (event) => this.props.formSubmit(event);\n  handleChange = (event) => this.props.inputChange(event);\n  \n  render() {\n    // const submitSelfieRetrievePlaylistInfo = this.props.submitSelfieRetrievePlaylistInfo;\n    return (\n      \n      <Form onSubmit={this.handleSubmit}>\n        <FormGroup>\n          <Input\n          onChange={this.handleChange}\n          type=\"file\"\n          id=\"image\"\n          accept=\"image/png, image/jpeg\"\n          />\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    );\n   }\n}\n\nexport default FileInput;\n","import React from 'react'\n\nfunction Player(props) {\n  return (\n    <iframe\n      src={props.embedded}\n      allow=\"encrypted-media\"\n      title=\"Spotify-Embedded-Player\"\n      width=\"300\"\n      height=\"380\"\n    >\n    </iframe>\n  );\n}\n\nexport default Player\n","export default __webpack_public_path__ + \"static/media/Sound-Wave.9601d5f1.png\";","import React from 'react';\nimport axios from 'axios';\nimport FormData from 'form-data';\nimport { Badge } from 'reactstrap';\n\nimport FileInput from './../FileInput/FileInput'\nimport Player from './../Player/Player'\n\nimport logo from './../../Sound-Wave.png';\nimport './App.css';\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      token: null,\n      user: '',\n      uri: null,\n      embedded: null,\n      userImage: null,\n      title: '',\n      newSelfie: true\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.handleChange = this.handleChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n\n  handleImageChange = (event) => {\n    this.setState({\n      userImage: event.target.files[0],\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n\n    let form_data = new FormData();\n    form_data.append('userImage', this.state.userImage, this.state.userImage.name);\n    \n\n    for (const val of form_data) {\n      console.log(val);\n    }\n    \n\n    let url = '/api/upload';\n    axios.post(url, form_data, {headers: {\"Content-type\": \"multipart/form-data\"}})\n      .then(res => {\n        this.setState({\n          uri: res.data.uri,\n          embedded: res.data.embedded,\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    const uri = this.state.uri;\n    const embedded = this.state.embedded;\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>\n          Welcome to Face the Music.\n        </h1>\n        <div id=\"selfie-div\">\n          <p>\n            What are you in the mood for?\n          </p>\n          <p id=\"next-selfie\">\n            Upload a selfie below to find a playlist:\n          </p>\n          <FileInput\n              formSubmit={this.handleSubmit}\n              inputChange={this.handleImageChange}\n          />\n        </div>\n        <div>\n          {uri && (\n            <Badge\n              href={uri}\n              color=\"success\"\n            >Play music on the app/web player.</Badge>\n          )}\n        </div>\n        <div id=\"Player\">\n          {embedded && (\n            <Player\n              embedded={embedded}\n            />\n          )}\n        </div>      \n      </header>\n      \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './Components/App/App.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}