{"version":3,"sources":["Components/FileInput/FileInput.js","Components/Player/Player.js","Sound-Wave.png","Components/App/App.js","reportWebVitals.js","index.js"],"names":["FileInput","props","handleSubmit","event","formSubmit","handleChange","inputChange","bind","Form","onSubmit","this","FormGroup","Input","onChange","type","id","accept","Button","React","Component","Player","src","embedded","allow","title","width","height","App","handleImageChange","userImage","target","files","undefined","setState","emptyUpload","preventDefault","state","console","log","form_data","FormData","append","name","val","axios","post","headers","then","res","uri","data","isFaceErrorResponseState","faceErrorMessage","handleScanButtonClick","catch","err","response","error","message","isUploadState","isPlayState","token","user","newSelfie","showUploadForm","isBadFaceResponse","badFaceResponseData","showPlayer","className","top","logo","alt","right","left","color","onClick","opposite","when","style","display","bottom","Badge","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89a469bd.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Form, FormGroup, Button, Input } from 'reactstrap';\n\nimport \"./FileInput.css\";\n\nclass FileInput extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    // this.fileInput = React.createRef();\n  }\n  \n  // Give FileInput a handleSubmit function as a prop so that the JSON response can update the App state\n  // Lift State up to App\n  handleSubmit = (event) => this.props.formSubmit(event);\n  handleChange = (event) => this.props.inputChange(event);\n  \n  render() {\n    // const submitSelfieRetrievePlaylistInfo = this.props.submitSelfieRetrievePlaylistInfo;\n    return (\n      \n      <Form onSubmit={this.handleSubmit}>\n        <FormGroup>\n          <Input\n          onChange={this.handleChange}\n          type=\"file\"\n          id=\"image\"\n          accept=\"image/png, image/jpeg\"\n          />\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    );\n   }\n}\n\nexport default FileInput;\n","import React from 'react'\n\nfunction Player(props) {\n  return (\n    <iframe\n      src={props.embedded}\n      allow=\"encrypted-media\"\n      title=\"Spotify-Embedded-Player\"\n      width=\"300\"\n      height=\"380\"\n    >\n    </iframe>\n  );\n}\n\nexport default Player\n","export default __webpack_public_path__ + \"static/media/Sound-Wave.9601d5f1.png\";","import React from 'react';\nimport axios from 'axios';\nimport FormData from 'form-data';\nimport { Badge, Button } from 'reactstrap';\n// TODO: Switch to more modern react-awesome-reveal\nimport { Bounce, Fade, Slide } from 'react-reveal/';\n\n// import Fade from 'react-reveal/Fade';\n// import RubberBand from 'react-reveal/RubberBand';\n\nimport FileInput from './../FileInput/FileInput'\nimport Player from './../Player/Player'\n\nimport logo from './../../Sound-Wave.png';\nimport './App.css';\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      token: null,\n      user: '',\n      uri: null,\n      embedded: null,\n      userImage: null,\n      title: '',\n      newSelfie: true,\n      isUploadState: false,\n      isPlayState: true,\n      emptyUpload: false,\n      faceErrorMessage: \"\",\n      isFaceErrorResponseState: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.handleChange = this.handleChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n\n  handleImageChange = event => {\n    const userImage = event.target.files[0];\n    \n    if (userImage !== undefined) {\n      this.setState({\n        emptyUpload: false,\n      });\n    }\n    \n    this.setState({\n      userImage: userImage,\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.userImage === null || this.state.userImage === undefined) {\n      this.setState({\n        emptyUpload: true,\n        isFaceErrorResponseState: false,\n        faceErrorMessage: \"\"\n      });\n      return;\n    }\n\n    // this.handleScanButtonClick();\n    console.log(this.state);\n\n    let form_data = new FormData();\n    form_data.append('userImage', this.state.userImage, this.state.userImage.name);\n    \n\n    for (const val of form_data) {\n      console.log(val);\n    }\n    \n\n    let url = '/api/upload';\n    axios.post(url, form_data, {headers: {\"Content-type\": \"multipart/form-data\"}})\n      .then(res => {\n        console.log(res);\n        this.setState({\n          uri: res.data.uri,\n          embedded: res.data.embedded,\n          isFaceErrorResponseState: false,\n          faceErrorMessage: \"\",\n        });\n        this.handleScanButtonClick();\n      })\n      .catch(err => {\n        if (err.response) {\n          this.setState({\n            isFaceErrorResponseState: true,\n            faceErrorMessage: err.response.data.error.message\n          });\n        }\n      });\n  }\n\n  handleScanButtonClick = event => {\n    this.setState({\n      isUploadState: !this.state.isUploadState,\n      isPlayState: !this.state.isPlayState,\n      emptyUpload: false,\n      isFaceErrorResponseState: false,\n    });\n  }\n\n  render() {\n    const uri = this.state.uri;\n    const embedded = this.state.embedded;\n    const showUploadForm = this.state.isUploadState;\n    const emptyUpload = this.state.emptyUpload;\n    const isBadFaceResponse = this.state.isFaceErrorResponseState;\n    const badFaceResponseData = this.state.faceErrorMessage;\n    const showPlayer = this.state.isPlayState;\n\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <Bounce top>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </Bounce>\n        <h1>\n          Welcome to Face the Music.\n        </h1>\n        <Fade right>\n          <p>\n            What are you in the mood for?\n          </p>\n        </Fade>\n        <Fade left>\n          <p className=\"intro\">\n            Face the Music takes a selfie, scans your emotions, and finds you a playlist suitable for that mood.\n          </p>\n        </Fade>\n        <Button color=\"primary\" onClick={this.handleScanButtonClick}>Start a scan!</Button>\n        <Fade top opposite when={showUploadForm}>\n          <div id=\"upload\" style={{display: showUploadForm ? 'block' : 'none'}}>\n            <p id=\"next-selfie\">\n              Upload a selfie below to find a playlist:\n            </p>\n            <FileInput\n                formSubmit={this.handleSubmit}\n                inputChange={this.handleImageChange}\n            />\n            <Fade bottom when={emptyUpload}>\n              <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n                <p>\n                  Please choose an image!\n                </p>\n              </div>\n            </Fade>\n            <Fade bottom when={isBadFaceResponse}>\n              <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n                <p>\n                  {badFaceResponseData}\n                </p>\n              </div>\n            </Fade>\n          </div>\n        </Fade>\n        <Fade bottom when={showPlayer}>\n          <div>\n            {uri && (\n              <Badge\n                href={uri}\n                color=\"success\"\n              >\n                Play music on the app/web player.\n              </Badge>\n            )}\n          \n            <div id=\"Player\">\n              {embedded && (\n                <Player\n                  embedded={embedded}\n                />\n              )}\n            </div>\n          </div>\n        </Fade>      \n      </header>\n      \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './Components/App/App.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}